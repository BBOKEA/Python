금일 진행사항 

속도측정 소스 설정 값 변경 
cars = carCascade.detectMultiScale(gray, 5,4,4,(2,6))
#영상 회색으로 변환하여서 번호판() 검출된 물체에 대해서 cars로 지정
#이미지 보정값 5 , 프레임간 최소 간격 4 고정 , 번호판의 픽셀크기 2~6 

완성도 90 하드웨어 제작만 남음


사용재료 : 
브레드보드 * 1
LED (R Y B G )  * 1
330 저항 * 4 
아두이노 uno * 1 
A Type Cable * 1
드론 프레임 * 1 
라즈베리 파이 * 1 
라즈베리 파이 카메라 * 1 

문제 해결과정 

1. open cv를 이용하여 물체 카운트 방법에 관하여
=라벨 카운트를 이용하여 해결

2. 아두이노에 버튼을 연결하여 시리얼 통신을 통해 코드 스위칭을 하고 싶었으나 
=라즈베리 파이에서 시리얼 통신 값을 읽어들이면 코드가 멈추는 현상 
파이썬에서 아두이노로 보내는 데이터양 > 아두이노에서 보내는 시리얼 통신값의 차이로 인식불가

하드웨어적인 방법에서 커맨드를 이용한 코드 스위칭으로 해결

3. 소스코드가 3분정도 경과시 멈추는 문제
=아두이노 시리얼 통신 응답 횟수 과다로 판정
=50ms 타임슬립으로 딜레이로 실행 시간 증가시켰지만 일정시간 경과시 프레임이 매우 낮아짐
=파이썬 코드와 아두이노 코드 딜레이를 같은 시간으로 맞췄으나 5분후 멈춤
=시리얼 통신속도 문제로 확정되어져 속도 조절 300 , 800 , 1200 ,2400 등 115200까지 재설정 
가장 긴 시간 실행되었던건 115200이나 10분이상 못버팀
=최종적으로 아두이노코드 수정 (   before=after; , after=1; ) 첫번째 들어온 변수와 처리후 변수를 비교하여 중복을 방지시켜서
불필요한 데이터 처리를 줄여 아두이노 통신 원활하게 만듬 

4. LCD 출력 문자열 밀림수정
= LCD 출력단 위치 고정으로 해결  

5. 외부스트리밍 방식은 딜레이 2~4초 발생으로 실시간 처리 어려움
=yolo4 보다 가벼운 yolov4-tiny 사용으로 딜레이 ms단위로 감축

6. 속도검출 기능의 한계점
도로의 폭과 각도에 따라 수치 값이 다르게 나옴 
수평 비행과 특정위치에 있다는 가정하에 도로폭의 사이즈를 도로교통공단에서 지정한 규격 값과 
일치 시켜야함

다운로드 목록

pip install opencv-python
pip install tensorflow
pip install pyserial
pip install dlib
pip install cvlib
pip install yolov4-tiny
pip install cmake
pip install numpy



사람과 차가 같이 있을때? 
사람을 우선 경고

차량과 오토바이 같이 있을때 
오토바이를 우선 경고

도로 규격
1.고속도로(차로+길어깨+중분대)

 *.2차로
 -.지방부:16.2M(차로3.6+3.6,길어께3.0+3.0 ,중앙분리대3.0)
 -.도시부:14.0M(차로3.5+3.5,길어께2.5+2.5 ,중앙분리대2.0)

*4차로
 -.지방부:23.4M(차로3.6*4,길어께3.0+3.0 ,중앙분리대3.0)
 -.도시부:21.0M(차로3.5*4,길어께2.5+2.5 ,중앙분리대2.0)

*6차로
 -.지방부:30.6M(차로3.6*6,길어께3.0+3.0 ,중앙분리대3.0)
 -.도시부:28.6M(차로3.5*6길어께2.5+2.5 ,중앙분리대2.0)

*8차로
-.지방부:37.8M , 도시부:35.0M

2.국도
*2차로
-.12.0M(차로3.5+3.5,길어께2.0+2.0 ,중앙분리대1.0)

*4차로:20M
*6차로:27M

3.지방도 ,군도등
-,2차로:약 11.0M(차로폭3.0~3.5사이,길어께1.5~2.0사이,중분대0.5~1.0사이)
-.4차로:약17.5M

4.기타도로(면도,이면도로,농어촌도로등)
4M~8M정도